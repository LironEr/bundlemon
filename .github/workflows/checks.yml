name: checks

on:
  push:
    branches: [master, release/*, next]
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  packages:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build-packages

      - name: Test
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: yarn test-packages

      - uses: codecov/codecov-action@v1
        if: ${{ matrix.node-version == '18.x' }} # run this step only one time
        with:
          file: ./coverage/coverage-final.json

      - name: Lint
        if: ${{ matrix.node-version == '18.x' }} # run this step only one time
        run: yarn lint-packages

  website:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Lint
        working-directory: ./apps/website
        run: yarn lint

      - name: Build
        working-directory: ./apps/website
        run: yarn build

  service:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Start mock services
        working-directory: ./apps/service
        run: yarn start:mock-services -d

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Test
        working-directory: ./apps/service
        run: yarn test

      - uses: codecov/codecov-action@v1
        with:
          file: ./service/coverage/coverage-final.json

      - name: Lint
        working-directory: ./apps/service
        run: yarn lint

      - name: Build
        working-directory: ./apps/service
        run: yarn build

      - name: Stop mock services
        if: always()
        working-directory: ./apps/service
        run: yarn stop:mock-services
